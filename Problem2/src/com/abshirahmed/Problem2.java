package com.abshirahmed;

import java.util.ArrayList;
import java.util.Arrays;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */

public class Problem2 {

    public static void main(String[] args) {

        int limit = 4000000;
        int i = 0;
        ArrayList<Integer> iterativeFibonacciArrayList = new ArrayList<>();


        while (iterativeFibonacciSequence(i) < limit) {
            iterativeFibonacciArrayList.add(iterativeFibonacciSequence(i));
            i++;

            if (iterativeFibonacciSequence(i) >= limit) {
                getFibonacciArrayList_iterative(i);
            }
        }

        System.out.println("Iterative ArrayList: " + Arrays.asList(iterativeFibonacciArrayList.toArray()));


    }

    private static int iterativeFibonacciSequence(int n) {

        if (n <= 1) {
            return 1;
        }
        int fib = 2;
        int previous = 1;

        for (int i = 2; i < n; i++) {
            int temp = fib;
            fib += previous;
            previous = temp;
        }

        return fib;
    }


    private static ArrayList<Integer> getFibonacciArrayList_iterative(int limit) {
        ArrayList<Integer> fibonacciArrayList = new ArrayList<>();
        int sum = 0;
        for (int i = 1; i <= limit; i++) {
            fibonacciArrayList.add(iterativeFibonacciSequence(i));

            if (fibonacciArrayList.get(i - 1) % 2 == 0) {
                sum += fibonacciArrayList.get(i - 1);
            }
        }
        System.out.println("There are " + limit + " values in this fibonacci sequence and the sum of all the even values is " + sum);
        return fibonacciArrayList;
    }
}
